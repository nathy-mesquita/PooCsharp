<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ByteBank.models</name>
    </assembly>
    <members>
        <member name="T:ByteBank.Models.Contas.ContaCorrente">
            <summary>
            Define uma conta corrente do banco ByteBank.
            </summary>
        </member>
        <member name="M:ByteBank.Models.Contas.ContaCorrente.#ctor(System.Int32,System.Int32)">
            <summary>
            Cria uma instância de ContaCorrente com os argumentos utilizados.
            </summary>
            <param name="agencia">Representa o valor da propriedade <see cref="P:ByteBank.Models.Contas.ContaCorrente.Agencia"/> e deve possuir um valor maior que zero</param>
            <param name="numero">Representa o valor da propriedade <see cref="P:ByteBank.Models.Contas.ContaCorrente.Numero"/> e deve possuir um valor maior que zero</param>
        </member>
        <member name="P:ByteBank.Models.Contas.ContaCorrente.Saldo">
            <summary>
            Informa o saldo na conta do cliente
            </summary>
        </member>
        <member name="M:ByteBank.Models.Contas.ContaCorrente.Sacar(System.Double)">
            <summary>
            Realiza o saque e atualiza o valor da propriedade <see cref="P:ByteBank.Models.Contas.ContaCorrente.Saldo"/>.
            </summary>
            <exception cref="T:System.ArgumentException">Exceção lançada quando um valor negativo é utilizado no argumento  <paramref name="valor"/>.</exception>
            <exception cref="T:ByteBank.Models.Exceptions.SaldoInsuficienteException">Exceção lançada quando o valor de <paramref name="valor"/> é maior que o valor da propriedade <see cref="P:ByteBank.Models.Contas.ContaCorrente.Saldo"/>.</exception>
            <param name="valor">Representa o valor do saque, deve ser maior que 0 e menor que o <see cref="P:ByteBank.Models.Contas.ContaCorrente.Saldo"/>.</param>
        </member>
        <member name="M:ByteBank.Models.Contas.ContaCorrente.Depositar(System.Double)">
            <summary>
            Deposita um valor na conta do cliente
            </summary>
            <param name="valor">valor para depósito</param>
        </member>
        <member name="M:ByteBank.Models.Contas.ContaCorrente.Transferir(System.Double,ByteBank.Models.Contas.ContaCorrente)">
            <summary>
            Transfere um valor entre contas
            </summary>
            <exception cref="T:System.ArgumentException">Exceção lançada quando o <paramref name="valor"/> é maior do que o <see cref="P:ByteBank.Models.Contas.ContaCorrente.Saldo"/>.</exception>
            <exception cref="T:ByteBank.Models.Exceptions.SaldoInsuficienteException">Exceção lançada quando o <paramref name="valor"/> é maior da propriedade <see cref="P:ByteBank.Models.Contas.ContaCorrente.Saldo"/>.</exception>
            <param name="valor">valor para transferência</param>
            <param name="contaDestino">conta de destino para tranferência</param>
        </member>
        <member name="T:ByteBank.Models.Exceptions.OperaçãoFinanceiraException">
            <summary>
            Define uma exceção OperacaoFinanceiraException 
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ByteBank.Models.Exceptions.OperaçãoFinanceiraException.#ctor" -->
        <!-- Badly formed XML comment ignored for member "M:ByteBank.Models.Exceptions.OperaçãoFinanceiraException.#ctor(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:ByteBank.Models.Exceptions.OperaçãoFinanceiraException.#ctor(System.String,System.Exception)" -->
        <member name="T:ByteBank.Models.Exceptions.SaldoInsuficienteException">
            <summary>
            Define uma exceção do tipo SaldoInsuficienteException
            </summary>
        </member>
        <member name="M:ByteBank.Models.Exceptions.SaldoInsuficienteException.#ctor">
            <summary>
            Construtor sem parâmetros.
            </summary>
        </member>
        <member name="M:ByteBank.Models.Exceptions.SaldoInsuficienteException.#ctor(System.Double,System.Double)">
            <summary>
            Contrutor com verificação do saldo disponível e valor de saque
            </summary>
            <param name="saldo">Saldo disponível na conta</param>
            <param name="valorSaque">Valor solicitado para saque</param>
        </member>
        <member name="M:ByteBank.Models.Exceptions.SaldoInsuficienteException.#ctor(System.String)">
            <summary>
            Construtor com parâmetro de mensagem.
            </summary>
            <param name="mensagem">passa um informação personalizada da excação tratada</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ByteBank.Models.Exceptions.SaldoInsuficienteException.#ctor(System.String,System.RankException)" -->
        <member name="T:ByteBank.Models.Funcionarios.Auxiliar">
            <summary>
            Auxiliar derivado de Funcionário 
            </summary>
        </member>
        <member name="M:ByteBank.Models.Funcionarios.Auxiliar.#ctor(System.String)">
            <summary>
            Intância da classe 
            </summary>
            <param name="cpf">Cpf do auxiliar</param>
        </member>
        <member name="M:ByteBank.Models.Funcionarios.Auxiliar.AumentarSalario">
            <summary>
            Método aumentar salário
            </summary>
        </member>
        <member name="M:ByteBank.Models.Funcionarios.Auxiliar.GetBonificacao">
            <summary>
            Médoto de bonificação
            </summary>
            <returns></returns>
        </member>
        <member name="T:ByteBank.Models.Funcionarios.Designer">
            <summary>
            Designer derivado de Funcionário
            </summary>
        </member>
        <member name="M:ByteBank.Models.Funcionarios.Designer.#ctor(System.String)">
            <summary>
            Intância da classe 
            </summary>
            <param name="cpf">Cpf do designer</param>
        </member>
        <member name="M:ByteBank.Models.Funcionarios.Designer.AumentarSalario">
            <summary>
            Método aumentar salário
            </summary>
        </member>
        <member name="M:ByteBank.Models.Funcionarios.Designer.GetBonificacao">
            <summary>
            Médoto de bonificação
            </summary>
            <returns></returns>
        </member>
        <member name="T:ByteBank.Models.Funcionarios.Diretor">
            <summary>
            Diretor derivado de FuncionárioAutenticavel
            </summary>
        </member>
        <member name="M:ByteBank.Models.Funcionarios.Diretor.#ctor(System.String)">
            <summary>
            Intância da classe 
            </summary>
            <param name="cpf">Cpf do Diretor</param>
        </member>
        <member name="M:ByteBank.Models.Funcionarios.Diretor.GetBonificacao">
            <summary>
            Médoto de bonificação
            </summary>
            <returns></returns>
        </member>
        <member name="M:ByteBank.Models.Funcionarios.Diretor.AumentarSalario">
            <summary>
            Método aumentar salário
            </summary>
        </member>
        <member name="T:ByteBank.Models.Funcionarios.Funcionario">
            <summary>
            Classe abstrata de Funcionário
            </summary>
        </member>
        <member name="P:ByteBank.Models.Funcionarios.Funcionario.TotalDeFuncionarios">
            <summary>
            Propriedade que contabiliza a quantidade total de funcionários
            </summary>
        </member>
        <member name="P:ByteBank.Models.Funcionarios.Funcionario.Nome">
            <summary>
            Propriedade Nome
            </summary>
        </member>
        <member name="P:ByteBank.Models.Funcionarios.Funcionario.CPF">
            <summary>
            Propriedade CPF
            </summary>
        </member>
        <member name="P:ByteBank.Models.Funcionarios.Funcionario.Salario">
            <summary>
            Propriedade Salario
            </summary>
        </member>
        <member name="M:ByteBank.Models.Funcionarios.Funcionario.#ctor(System.Double,System.String)">
            <summary>
            Construtor da classe Base Funcionario
            </summary>
            <param name="salario">Salário do Funcionário</param>
            <param name="cpf">CPF do Funcionário</param>
        </member>
        <member name="M:ByteBank.Models.Funcionarios.Funcionario.AumentarSalario">
            <summary>
            Método abstrato de Aumentar o Salário do Funcionário
            </summary>
        </member>
        <member name="M:ByteBank.Models.Funcionarios.Funcionario.GetBonificacao">
            <summary>
            Método abstrato que obtêm a bonificação do Funcionário
            </summary>
            <returns></returns>
        </member>
        <member name="T:ByteBank.Models.Funcionarios.FuncionarioAutenticavel">
            <summary>
            Classe abstrata (pois não implementa os métodos da classe base Funcionário) e obtêm a interface Autenticavel
            </summary>
        </member>
        <member name="P:ByteBank.Models.Funcionarios.FuncionarioAutenticavel.Senha">
            <summary>
            Propriedade do método Autenticar
            </summary>
        </member>
        <member name="M:ByteBank.Models.Funcionarios.FuncionarioAutenticavel.#ctor(System.Double,System.String)">
            <summary>
            Construtor da classe, que passa os parâmetros para a classe base Funcionario
            </summary>
            <param name="salario">Salário do Funcioário</param>
            <param name="cpf">CPF do Funcioário</param>
        </member>
        <member name="M:ByteBank.Models.Funcionarios.FuncionarioAutenticavel.Autenticar(System.String)">
            <summary>
            Implementação do método Autenticar
            </summary>
            <param name="senha">Senha do Funcionário</param>
            <returns></returns>
        </member>
        <member name="T:ByteBank.Models.Funcionarios.GerenteDeConta">
            <summary>
            Gerente de conta derivado de FuncionárioAutenticavel
            </summary>
        </member>
        <member name="M:ByteBank.Models.Funcionarios.GerenteDeConta.#ctor(System.String)">
            <summary>
            Intância da classe 
            </summary>
            <param name="cpf">Cpf do Gerente de Conta</param>
        </member>
        <member name="M:ByteBank.Models.Funcionarios.GerenteDeConta.AumentarSalario">
            <summary>
            Método aumentar salário
            </summary>
        </member>
        <member name="M:ByteBank.Models.Funcionarios.GerenteDeConta.GetBonificacao">
            <summary>
            Médoto de bonificação
            </summary>
            <returns></returns>
        </member>
        <member name="T:ByteBank.Models.Parceiros.ParceiroComercial">
            <summary>
            Parceiro comercial que assina o contrato de autenticar
            </summary>
        </member>
        <member name="P:ByteBank.Models.Parceiros.ParceiroComercial.Senha">
            <summary>
            Propiedade da senha
            </summary>
        </member>
        <member name="M:ByteBank.Models.Parceiros.ParceiroComercial.Autenticar(System.String)">
            <summary>
            Método de autenticação
            </summary>
            <param name="senha">Senha do parceiro comercial</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:ByteBank.Models.Sistemas.AutenticacaoHelper" -->
        <member name="T:ByteBank.Models.Sistemas.GerenciadorDeBonificacao">
            <summary>
            Calcula a bonificação de acordo com cada funcionário
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ByteBank.Models.Sistemas.GerenciadorDeBonificacao.Registrar(ByteBank.Models.Funcionarios.Funcionario)" -->
        <!-- Badly formed XML comment ignored for member "M:ByteBank.Models.Sistemas.GerenciadorDeBonificacao.GetBonificacao" -->
        <member name="T:ByteBank.Models.Sistemas.IAutenticavel">
            <summary>
            Interface (contrato) para autenticação de usuário
            </summary>
        </member>
        <member name="M:ByteBank.Models.Sistemas.IAutenticavel.Autenticar(System.String)">
            <summary>
            Assinatura do método autenticável
            </summary>
            <param name="senha">Senha do usuário</param>
            <returns></returns>
        </member>
        <member name="T:ByteBank.Models.Sistemas.SistemaInterno">
            <summary>
            Sistema interno que verifica a autenticidade dos usuários
            </summary>
        </member>
        <member name="M:ByteBank.Models.Sistemas.SistemaInterno.Logar(ByteBank.Models.Sistemas.IAutenticavel,System.String)">
            <summary>
            Método de fazer login 
            </summary>
            <param name="funcionario"></param>
            <param name="senha"></param>
            <returns></returns>
        </member>
        <member name="T:ByteBank.models.Sistemas.DateCountdown">
            <summary>
            Contagem regressiva de data
            </summary>
        </member>
    </members>
</doc>
